## 镜像 vs 容器

```{topic} 镜像
Docker 镜像（image）是 read-only 文件。

- 此文件包含文件系统，源码，库文件，依赖，工具等一些运行应用所需要的文件。
- 可以理解为模板。
- 镜像具有分层的概念。
```

```{topic} 容器
Docker 镜像的运行时。

- 实质是复制 image 并在 image 最上层加上一层 read-write 的层 （称之为 container layer，容器层）。

- 基于同一个 image 可以创建多个容器。
```

## 容器基本操作

```{list-table} 容器命令
:widths: 25 25 25
:header-rows: 1
*
    - 操作
    - 命令（全）
    - 命令（简）
*
    - 容器的创建
    - `docker container run <image name>`
    - `docker run <image name>`
*
    - 容器的列出(up)
    - `docker container ls`
    - `docker ps`
*
    - 容器的列出(up和exit)
    - `docker container ls -a`
    - `docker ps -a`
*
    - 容器的停止
    - `docker container stop <name or ID>`
    - `docker stop <container name or ID>`
*
    - 容器的删除
    - `docker container rm <name or ID>`
    - `docker rm <container name or ID>`
```

```{tip}
- `docker container stop cd3 269 34b 751` 批量删除
- `docker container stop $(docker container ps -aq)` 批量删除
- `docker system prune -a -f` 可以快速对系统进行清理，删除停止的容器，不用的镜像，等等。
```

```{topic} shell 模式
- `docker container run -it`：创建容器并进入交互式模式。
- `docker container exec -it`：在已经运行的容器中执行额外的命令。
```

````{admonition} 例子
```bash
docker container run -d --publish 80:80 --name webhost nginx
```

- 在本地查找是否有 `nginx` 镜像，但是没有发现；
- 去远程的 image registry 查找 `nginx` 镜像（默认的 registry 是 Docker Hub)
- 下载最新版本的 `nginx` 镜像 （`nginx:latest` 默认)
- 基于 `nginx` 镜像来创建新的容器，并且准备运行
- docker engine 给这个容器分配虚拟 IP 地址
- 在宿主机上打开 80 端口并把容器的 80 端口转发到宿主机上
- 启动容器，运行指定的命令（这里是 shell 脚本去启动 nginx）
````
